#!/bin/bash

glidein_config="$1"

function info {
    echo "INFO  " $@ 1>&2
}

function warn {
    echo "WARN  " $@ 1>&2
}

###########################################################
# import add_config_line and add_condor_vars_line functions

add_config_line_source=`grep '^ADD_CONFIG_LINE_SOURCE ' $glidein_config | awk '{print $2}'`
source $add_config_line_source

# Patch over add_config_line() with a safer version
add_config_line() {
    # Ignore the call if the exact config line is already in there
    if ! grep -q "^${*}$" "${glidein_config}"; then
        # Use temporary files to make sure multiple add_config_line() calls don't clobber
        # the glidein_config.
        local r="$(head -c16 /dev/urandom | base64 -w0 - | tr / _)"
        local tmp_config1="${glidein_config}.$r.1"
        local tmp_config2="${glidein_config}.$r.2"

        # Copy the glidein config so it doesn't get modified while we grep out the old value
        if ! cp -p "${glidein_config}" "${tmp_config1}"; then
            warn "Error writing ${tmp_config1}"
            rm -f "${tmp_config1}"
            exit 1
        fi
        grep -v "^$1 " "${tmp_config1}" > "${tmp_config2}"
        rm -f "${tmp_config1}"
        if [ ! -f "${tmp_config2}" ]; then
            warn "Error creating ${tmp_config2}"
            exit 1
        fi
        # NOTE that parameters are flattened if not quoted, if there are blanks they are separated by single space
        echo "$@" >> "${tmp_config2}"

        # Replace glidein config atomically
        if ! mv -f "${tmp_config2}" "${glidein_config}"; then
            warn "Error updating ${glidein_config} from ${tmp_config2}"
            rm -f "${tmp_config2}"
            exit 1
        fi
    fi
}
# End add_config_line() patch

condor_vars_file=`grep -i "^CONDOR_VARS_FILE " $glidein_config | awk '{print $2}'`

###########################################################
# stashcp 
STASHCP=$PWD/client/stashcp
STASHCP_DEBUG="-d"
STASHCP_TEST_FILE="/osgconnect/public/dweitzel/stashcp/test.file"
STASH_PLUGIN=$PWD/client/stash_plugin
chmod 755 $STASHCP $STASH_PLUGIN

TIMEOUT=$(which timeout 2>/dev/null)
if [ "x$TIMEOUT" != "x" ]; then
    TIMEOUT="$TIMEOUT 10s"
fi

glidein_site=`grep -i "^GLIDEIN_Site " $glidein_config | awk '{print $2}'`
if [[ -z $OSG_SITE_NAME ]]; then
    OSG_SITE_NAME=$glidein_site
fi

# also run a simple test (TODO: make this IGWN-specific)
info "Testing $STASHCP $STASHCP_DEBUG $STASHCP_TEST_FILE..."
if $TIMEOUT $STASHCP $STASHCP_DEBUG $STASHCP_TEST_FILE stashcp-test.file >> stashcp-test.log 2>&1; then
    info "Succeeded!"
    add_config_line FILETRANSFER_PLUGINS "\$(FILETRANSFER_PLUGINS),$STASH_PLUGIN"
    add_condor_vars_line FILETRANSFER_PLUGINS "C" "-" "+" "N" "N" "-"
else
    warn "Failed! stashcp output:"
    while read line; do warn "$line"; done < stashcp-test.log
fi

echo "All done (igwn-additional-htcondor-config)"
